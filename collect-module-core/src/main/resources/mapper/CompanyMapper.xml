<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tzj.collect.core.mapper.CompanyMapper">

	<select id="selectCompanyCountByCom" parameterType="String"
		resultType="java.lang.Integer">
		SELECT
		COUNT(scr.company_id) AS communityNum
		FROM
		sb_recycler_community src
		LEFT JOIN sb_company_recycler scr ON src.recycler_id =
		scr.recycler_id
		WHERE
		src.community_id = #{communityId}
	</select>
	<select id="selectCategoryCountByCom" parameterType="String"
		resultType="java.lang.Integer">
		SELECT DISTINCT
		COUNT(scc.category_id)
		FROM
		sb_company_category scc
		INNER JOIN (
		SELECT
		scr.company_id,
		src.recycler_id,
		src.community_id
		FROM
		sb_recycler_community src
		INNER JOIN sb_company_recycler scr ON src.recycler_id = scr.recycler_id
		WHERE
		src.community_id = #{communityId}
		GROUP BY
		scr.company_id
		) comIdRecId ON scc.company_id = comIdRecId.company_id

    </select>
    <select id="selectCompanyListByComm" parameterType="String" resultType="com.tzj.collect.entity.Company">
		SELECT
		DISTINCT
			sc.name_,
			sc.address,
			sc.tel
		FROM
			sb_company sc
		INNER JOIN (
			SELECT
				srcsrm.company_id
			FROM
				(
					SELECT
						scr.company_id,
						scr.recycler_id
					FROM
						sb_company_recycler scr
					INNER JOIN (
						SELECT
							sr.id
						FROM
							sb_recycler_community src
						INNER JOIN sb_recyclers sr ON sr.id = src.recycler_id
						WHERE
							sr.status_ = '0'
					) srcsr ON srcsr.id = scr.recycler_id
				) srcsrm
			INNER JOIN sb_recycler_community src ON src.recycler_id = srcsrm.recycler_id
			WHERE
				src.community_id = #{communityId}
		) scmmScr ON scmmScr.company_id = sc.id
    </select>
    
    <select id="getTypeByComId" resultType="com.tzj.collect.core.result.business.BusinessRecType">
    	SELECT
			sst.first_id AS firstId,
			sst.first_name AS firstName,
			sst.second_id AS secondId,
			sst.second_name AS secondName,
			sst.third_id AS thirdId,
			sst.third_name AS thirdName
		FROM
			sb_company_category scc
		INNER JOIN (
			SELECT
				scd.id AS first_id,
				scd.name_ AS first_name,
				sccc.*
			FROM
				(
					SELECT DISTINCT
						sc1.id AS second_id,
						sc1.name_ second_name,
						sc1.parent_id,
						sc.id AS third_id,
						sc.name_ AS third_name
					FROM
						sb_category sc
					INNER JOIN sb_category sc1 ON sc.parent_id = sc1.id
				) sccc
			INNER JOIN sb_category scd ON scd.id = sccc.parent_id
		) sst ON scc.category_id = sst.third_id
		WHERE
			scc.company_id = #{companyId}
    </select>


	<insert id="insertCompany" parameterType="com.tzj.collect.entity.Company">
		insert into
		sb_company
		(name_,company_code,create_date, update_date,
		del_flag)
		values
		(#{company.name},#{company.companyCode},#{company.createDate},#{company.updateDate},'0')
	</insert>
	 <select id="getCompanyIdByIds" parameterType="Integer" resultType="Integer">
	 	SELECT DISTINCT a.id FROM sb_company a 
		LEFT JOIN sb_company_service b ON a.id = b.company_id 
		LEFT JOIN sb_company_category c ON a.id = c.company_id 
		WHERE b.community_id= #{CommunityId} AND c.category_id = #{CategoryId} AND a.del_flag = '0' AND b.del_flag = '0' AND c.del_flag = '0' 
	 </select>
	 <select id = "getCompanyByIds" parameterType="Integer" resultMap="companyResultMap">
	 	SELECT DISTINCT <include refid="zd"/> FROM sb_company a 
		LEFT JOIN sb_company_service b ON a.id = b.company_id 
		WHERE b.community_id= #{CommunityId}  AND a.del_flag = '0' AND b.del_flag = '0'
	 </select>
	 
	 <select id = "getCompanyWithNotFound" parameterType="Integer" resultMap="companyResultMap">
	 	SELECT
			scomScs.id,
			scomScs.name_
		FROM
			(
				SELECT
					sa.parent_id
				FROM
					sb_community scomm
				INNER JOIN sb_area sa ON scomm.area_id = sa.id
				WHERE
					scomm.del_flag = '0'
				AND sa.del_flag = '0'
				AND scomm.id = #{communityId}
			) scommSa
		LEFT JOIN (
			SELECT
				scom.*, scs.area_id
			FROM
				sb_company scom
			INNER JOIN sb_company_share scs
			WHERE
				scom.del_flag = '0'
			AND scs.del_flag = '0'
			AND scs.category_id = #{categoryId}
			AND scom.id = scs.company_id
		) scomScs ON scommSa.parent_id = scomScs.area_id
		LIMIT 0,
		 1
	 </select>
	<select id="selectIotUrlByEquipmentCode" parameterType="String" resultType="com.tzj.collect.core.param.iot.IotCompanyResult">
		SELECT
			sceUrl.iot_url,
			sca.username,
			sca.password_,
			sceUrl.hardware_code
		FROM
			sb_company_account sca
		INNER JOIN (
			SELECT
				scc.iot_url,
				sce.company_id,
				sce.hardware_code
			FROM
				sb_company scc
			INNER JOIN sb_company_equipment sce ON scc.id = sce.company_id
			WHERE
				scc.del_flag = 0
			AND sce.del_flag = 0
			AND sce.equipment_code = #{cabinetNo}
		) sceUrl ON sca.company_id = sceUrl.company_id
		WHERE
			sca.del_flag = 0
		LIMIT 0,
		 1
	</select>
	<select id="getAdminCompanyList" parameterType="Object" resultType="Map">
		SELECT DISTINCT
		a.id,
		a.name_ AS name,
		a.contacts,
		a.tel,
		DATE_FORMAT(
		a.create_date,
		'%Y-%m-%d %H:%i:%s'
		) AS createDate
		FROM
		sb_company a
		<if test="title != null and title !='' ">
			INNER JOIN sb_company_category b ON a.id = b.company_id
			INNER JOIN sb_category c ON b.parent_id = c.id
		</if>
		WHERE
		 a.del_flag = 0
		<if test="title != null and title !='' ">
			and b.del_flag = 0
			AND c.title = #{title}
		</if>
		<if test="companyName != null and companyName !='' ">
			AND a.name_ LIKE CONCAT(CONCAT('%',#{companyName}), '%')
		</if>
		order by a.create_date
		LIMIT #{pageStart},#{pageSize}
	</select>

	<select id="getCompanyTitleNum" resultType="Map">
		SELECT COUNT(1) AS count,title FROM (
		SELECT
			a.company_id,
			a.title
		FROM
			(
				SELECT
					a.*, b.title
				FROM
					sb_company_category a
				LEFT JOIN sb_category b ON a.parent_id = b.id
				WHERE
					a.del_flag = 0
			) a
		GROUP BY
			a.title,
			a.company_id
		ORDER BY
			a.company_id
		) a GROUP BY a.title
		ORDER BY a.title ASC
	</select>
	<select id="getAdminCompanyCount" parameterType="Object" resultType="Integer">
		SELECT COUNT(1) FROM (
			SELECT DISTINCT
				a.id,
				a.name_ AS name,
				a.contacts,
				a.tel,
				DATE_FORMAT(
				a.create_date,
				'%Y-%m-%d %H:%i:%s'
				) AS createDate
			FROM
				sb_company a
			<if test="title != null and title !='' ">
				INNER JOIN sb_company_category b ON a.id = b.company_id
				INNER JOIN sb_category c ON b.parent_id = c.id
			</if>
			WHERE
			a.del_flag = 0
			<if test="title != null and title !='' ">
				and b.del_flag = 0
				AND c.title = #{title}
			</if>
			<if test="companyName != null and companyName !='' ">
				AND a.name_ LIKE CONCAT(CONCAT('%',#{companyName}), '%')
			</if>
		) a
	</select>
	 
	 <resultMap type="com.tzj.collect.entity.Company" id="companyResultMap">
        <id property="id" column="id" />  
		<result property="name" column="name_" />
		<result property="companyCode" column="company_code" />
		<result property="contacts" column="contacts" />
		<result property="tel" column="tel" />
		<result property="address" column="address" />
		<result property="introduction" column="introduction" />
		<result property="icon" column="icon" />
		<result property="website" column="website" />
		<result property="email" column="email" />
		<result property="zipcode" column="zipcode" />
		<result property="orgCode" column="org_code" />
		<result property="createDate" column="create_date" />
     </resultMap>
     <sql id="zd">
	     a.id,
	     a.name_,
	     a.company_code,
	     a.contacts,
	     a.tel,
	     a.address,
	     a.introduction,
	     a.icon,
	     a.website,
	     a.email,
	     a.zipcode,
	     a.org_code,
	     a.create_date
     </sql>
</mapper>