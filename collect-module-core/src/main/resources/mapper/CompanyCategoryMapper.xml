<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tzj.collect.core.mapper.CompanyCategoryMapper">
	<select id="selectCompanys" parameterType="Integer" resultType="com.tzj.collect.entity.Company">
		SELECT DISTINCT
			f.*
		FROM
			sb_company_category_city_name a
		LEFT JOIN sb_category b ON a.category_id = b.id
		LEFT JOIN sb_area c ON a.city_id = c.parent_id
		LEFT JOIN sb_area d ON c.id = d.parent_id
		LEFT JOIN sb_company_service e ON d.id = e.area_id AND a.company_id = e.company_id
		LEFT JOIN sb_company f ON a.company_id = f.id
		WHERE
			b.parent_id = #{categoryId}
		AND e.community_id = #{communityId}
	</select>
	<select id="selectCompanyByTitle" parameterType="Object" resultType="com.tzj.collect.entity.Company">
		SELECT DISTINCT
			f.*
		FROM
			sb_company_category_city_name a
		LEFT JOIN sb_category b ON a.category_id = b.id
		LEFT JOIN sb_area c ON a.city_id = c.parent_id
		LEFT JOIN sb_area d ON c.id = d.parent_id
		LEFT JOIN sb_company_service e ON d.id = e.area_id AND a.company_id = e.company_id
		LEFT JOIN sb_company f ON a.company_id = f.id
		WHERE
			b.title = #{title}
		AND e.community_id = #{communityId}
	</select>
	<select id="selectCategoryByCompanyId" parameterType="long" resultType="java.lang.Integer">
				SELECT
			count(*)
			FROM
				sb_company_category sbc
			LEFT JOIN sb_company sc ON sbc.company_id = sc.id
			AND sc.id =#{companyId}
            AND sc.del_flag='0'

	</select>
	<select id= "getCategoryData" parameterType="String" resultType="com.tzj.collect.core.result.business.CategoryResult">
		SELECT
			sc.id,
			sc.name_
		FROM
			sb_category sc
		WHERE
			sc.del_flag = 0
		AND sc.level_ = 0
		AND sc.unuseful = 0
		AND sc.title IN (
			(
				SELECT
				IF (
					(
						SELECT
							COUNT(*)
						FROM
							sb_company_service scs
						WHERE
							scs.del_flag = 0
						AND scs.company_id = #{companyId}
					) > 0,
					'2',
					NULL
				) AS title
			),
			'1'
		)
	</select>
	<select id="getBigThingCategoryList" parameterType="Integer" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			ROUND(IF(a.price is NULL,IF(bb.price IS NULL,sc.price,bb.price),a.price),2) AS price,
			sccp.unit,
			sc.name_,
			sc.id,
			sc.icon,
			b.name_ AS parentName,
			b.id AS parentId,
			sc.is_old_exchange_new AS isOldExchangeNew,
			sc.ant_forest_pic AS antForestPic
		FROM
			sb_company_category_city_name sccp
		LEFT JOIN (SELECT * FROM sb_company_category_city a WHERE a.company_id = #{companyId} AND a.city_id = #{cityId}) a ON a.category_id = sccp.category_id
		LEFT JOIN (SELECT * FROM sb_category_city a WHERE a.city_id = #{cityId}) bb ON bb.category_id = sccp.category_id
		INNER JOIN sb_category sc ON sc.id = sccp.category_id
		INNER JOIN sb_category b
		ON sc.parent_id = b.id
		WHERE
			sccp.parent_id = #{categoryId}
		AND sccp.company_id = #{companyId}
		AND sccp.city_id = #{cityId}
		AND sccp.del_flag = 0
		AND b.del_flag = 0
		ORDER BY sc.code_ ASC
	</select>
	<select id="getOwnnerPrice" parameterType="com.tzj.collect.core.param.ali.CategoryBean" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			FORMAT(sccp.price,2) AS price,
			sccp.unit,
			sc.name_,
			sc.id,
			sc.icon,
			b.name_ AS parentName,
			b.id AS parentId,
			sc.is_old_exchange_new AS isOldExchangeNew,
			sc.ant_forest_pic AS antForestPic
		FROM
			sb_company_category sccp
		INNER JOIN sb_category sc ON sc.id = sccp.category_id
		LEFT JOIN sb_category b
		ON sc.parent_id = b.id
		WHERE
			sccp.parent_id = #{categoryBean.id}
		AND sccp.company_id = #{companyId} 
		AND sccp.price > 0
		AND sccp.del_flag = 0
		AND b.del_flag = 0
		ORDER BY sc.code_ ASC
	</select>
	<select id="getOwnnerNoPrice" parameterType="com.tzj.collect.core.param.ali.CategoryBean" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			FORMAT(sccp.price,2) AS price,
			sccp.unit,
			sc.name_,
			sc.id,
			sc.icon,
			b.name_ AS parentName,
			b.id AS parentId,
			sc.is_old_exchange_new AS isOldExchangeNew,
			sc.ant_forest_pic AS antForestPic
		FROM
			sb_company_category sccp
		INNER JOIN sb_category sc ON sc.id = sccp.category_id
		LEFT JOIN sb_category b
		ON sc.parent_id = b.id
		WHERE
			sccp.parent_id = #{categoryBean.id}
		AND sccp.company_id = #{companyId} 
		AND sccp.price = 0
		AND sccp.del_flag = 0
		AND b.del_flag = 0
		ORDER BY sc.code_ ASC
	</select>
	<select id="getNoPrice" parameterType="com.tzj.collect.core.param.ali.CategoryBean" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			FORMAT(0,2) AS price, 
			sccp.unit, 
			sc.name_, 
			sc.id, 
			sc.icon,
			b.name_ AS parentName,
			b.id AS parentId,
			sc.is_old_exchange_new AS isOldExchangeNew,
			sc.ant_forest_pic AS antForestPic
		FROM
			sb_company_category sccp
		INNER JOIN sb_category sc ON sc.id = sccp.category_id
		LEFT JOIN sb_category b
		ON sc.parent_id = b.id
		WHERE
			sccp.parent_id = #{categoryBean.id}
		AND sccp.company_id = #{companyId}
		AND sccp.del_flag = 0
		AND b.del_flag = 0
		ORDER BY sc.code_ ASC
	</select>
	<select id="getOwnnerPriceApp" parameterType="com.tzj.collect.core.param.ali.CategoryBean" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			FORMAT(sccp.price,2) AS price,
			sccp.unit,
			sc.name_,
			sc.id,
			sc.icon
		FROM
			sb_company_category sccp
		INNER JOIN sb_category sc ON sc.id = sccp.category_id
		WHERE
			sccp.parent_id = #{categoryBean.id} 
		AND sccp.company_id = #{companyId} 
		AND (FORMAT(sccp.price,2) > 0 OR sc.unuseful = '1')
		AND sccp.del_flag = 0
		AND sc.del_flag = 0
		ORDER BY sc.code_ ASC
	</select>
	<select id="getOwnnerPriceApps" parameterType="com.tzj.collect.core.param.ali.CategoryBean" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			FORMAT(sccp.price,2) AS price,
			sccp.unit,
			sc.name_,
			sc.id,
			sc.icon
		FROM
			sb_company_category sccp
		INNER JOIN sb_category sc ON sc.id = sccp.category_id
		WHERE
			sccp.parent_id = #{categoryBean.id}
		AND sccp.company_id = #{companyId}
		AND sccp.del_flag = 0
		AND sc.del_flag = 0
		ORDER BY sc.code_ ASC
	</select>
	<select id="getlogisticsPriceList" parameterType="Integer" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			FORMAT(b.price, 2) AS price,
			a.unit,
			a.name_,
			a.id,
			a.icon,
			c.name_ AS parentName,
			c.id AS parentId,
			a.is_old_exchange_new AS isOldExchangeNew
		FROM
			sb_category a
		LEFT JOIN sb_logistics_company_category b ON a.id = b.category_id
		LEFT JOIN sb_category c ON a.parent_id = c.id
		WHERE
			a.parent_id = #{categoryId}
		AND b.logistics_id = #{logisticsId}
		<choose>
			<when test="isCash == 0">
				AND b.price = 0
			</when>
			<otherwise>
				AND b.price > 0
			</otherwise>
		</choose>
		AND a.del_flag = 0
		AND b.del_flag = 0
		ORDER BY a.code_ ASC
	</select>
	
	<!-- <select id="getAvgPrice" parameterType="com.tzj.collect.api.ali.param.CategoryBean" resultType="com.tzj.collect.api.ali.result.ComCatePrice">
		SELECT
			ROUND(AVG(sccp.price), 2) AS price,
			sccp.unit,
			sc.name_,
			sc.id,
			sc.icon
		FROM
		sb_category sc
		LEFT  JOIN sb_company_category sccp ON sc.id = sccp.category_id
		WHERE
			sc.parent_id = #{categoryBean.id}
		GROUP BY
			sc.id
		ORDER BY
			sc.code_ ASC;
	</select> -->
	<!-- 获取市场价格 -->
	<select id="getAvgPrice" parameterType="com.tzj.collect.core.param.ali.CategoryBean" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			FORMAT(sc.market_price, 2) AS price,
			sc.name_,
			sc.id,
			sc.icon,
			sc.unit,
			b.name_ AS parentName,
			b.id AS parentId,
			sc.is_old_exchange_new AS isOldExchangeNew,
			sc.ant_forest_pic AS antForestPic
		FROM
		sb_category sc
		LEFT JOIN sb_category b
		ON sc.parent_id = b.id
		WHERE
			sc.parent_id = #{categoryBean.id} 
		AND sc.price > 0
		AND sc.del_flag = 0
		GROUP BY
			sc.id
		ORDER BY
			sc.code_ ASC;
	</select>
	<select id="getAvgNoPrice" parameterType="com.tzj.collect.core.param.ali.CategoryBean" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			FORMAT(sc.market_price, 2) AS price,
			sc.name_,
			sc.id,
			sc.icon,
			sc.unit,
			b.name_ AS parentName,
			b.id AS parentId,
			sc.is_old_exchange_new AS isOldExchangeNew,
			sc.ant_forest_pic AS antForestPic
		FROM
		sb_category sc
		LEFT JOIN sb_category b
		ON sc.parent_id = b.id
		WHERE
			sc.parent_id = #{categoryBean.id} 
		AND sc.price = 0
		AND sc.del_flag = 0
		GROUP BY
			sc.id
		ORDER BY
			sc.code_ ASC;
	</select>
	<select id="getAvgPriceApp" parameterType="com.tzj.collect.core.param.ali.CategoryBean" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
		SELECT
			if(FORMAT(sc.market_price,2) = FORMAT(soi.price,2), FORMAT(sc.market_price,2), FORMAT(soi.price,2)) AS price,
			sc.name_,
			sc.id,
			sc.icon,
			sc.unit
		FROM
		sb_category sc
		INNER JOIN sb_order_category soc  ON soc.category_id = sc.category_id
		INNER JOIN sb_order_item soi ON soi.order_id = soc.order_id
		WHERE
			sc.parent_id = #{categoryBean.id} 
		AND (FORMAT(sc.market_price, 2) > 0 OR sc.unuseful = '1')
		AND sc.del_flag = 0
		GROUP BY
			sc.id
		ORDER BY
			sc.code_ ASC;
	</select>
	<select id="getAppCategoryList" resultType="com.tzj.collect.core.result.ali.ComCatePrice">
			SELECT
						0 AS price,
						sc.name_,
						sc.id,
						scc.icon,
						'kg' as unit
			FROM sb_category sc
			LEFT JOIN sb_category scc ON sc.id = scc.parent_id
			WHERE sc.level_= 0
			AND sc.title = 2
			AND sc.unuseful = 0
			GROUP BY sc.id
	</select>


	
	<select id="selectComCateAttOptPrice" parameterType="com.tzj.collect.core.param.business.ComIdAndCateOptIdBean" resultType="com.tzj.collect.core.result.business.BusinessCategoryResult">
		SELECT
			acao.id AS attOptionId,
			acao.name_ AS attOptionName,
			acao.id AS comOptPriceId,
			acao.price AS comOptPrice,
			acao.is_special AS isSpecial,
			20 AS specialPrice
		FROM
			sb_category_attr_option acao
		WHERE
			acao.del_flag = 0 AND acao.category_attr_id =  #{cateOptId}
	</select>
	<select id="priceIsAvailable" parameterType="com.tzj.collect.core.param.business.ComIdAndCateOptIdBean" resultType = "String">
		SELECT
			SUM(minPrice.minPrice) AS minSUM
		FROM
			(
				SELECT
					scaoSca.id,
					scaoSca.name_,
					Min(
						IFNULL(acaoPrice.comOptPrice, 0)
					) AS minPrice
				FROM
					(
						SELECT
							sca.id,
							sca.name_,
							scao.id AS attrId,
							scao.name_ AS attrName
						FROM
							sb_category_attr sca
						INNER JOIN sb_category_attr_option scao ON sca.id = scao.category_attr_id
						WHERE
							sca.category_id = #{categoryId}
					) scaoSca
				INNER JOIN (
					SELECT
						acao.id AS attOptionId,
						acao.name_ AS attOptionName,
						sccao.id AS comOptPriceId,
						sccao.attr_option_price AS comOptPrice
					FROM
						sb_category_attr_option acao
					LEFT JOIN (
						SELECT
							sccao.id,
							sccao.attr_option_price,
							sccao.category_attr_option_id
						FROM
							sb_company_category_attr_option sccao
						WHERE
							sccao.del_flag = 0
						AND sccao.company_id = #{companyId}
					) sccao ON sccao.category_attr_option_id = acao.id
					WHERE
						acao.del_flag = 0
				) acaoPrice ON acaoPrice.attOptionId = scaoSca.attrId
				GROUP BY
					scaoSca.id
			) minPrice
	</select>
	
	
	 <update id="updateHousePrice" parameterType="com.tzj.collect.entity.CompanyCategory">
		 UPDATE sb_company_category SET price = #{price} WHERE category_id = #{categoryId} AND company_id = #{categoryId} 
	 </update>
	 
	<select id="selectByCategoryId" parameterType="int" resultType="com.tzj.collect.entity.CompanyCategory">
		select * from sb_company_category where category_id = #{param1}
	</select>
	
	<insert id="insertPrice" parameterType="com.tzj.collect.entity.CompanyCategory">
		INSERT sb_company_category (category_id,parent_id,parent_ids,company_id,price,unit,create_date,update_date,del_flag)
		 VALUES(#{categoryId},#{parentId},#{parentIds},#(companyId),#{price},#{unit},NOW(),NOW(),#{delFlag});
	</insert>
	
	<select id="selectPriceByAttrId" parameterType="String" resultType="com.tzj.collect.entity.CompanyCategory">
		SELECT scc.* FROM sb_company_category scc 
		LEFT JOIN sb_category sc 
		ON scc.category_id=sc.id
		LEFT JOIN sb_category_attr sca
		ON sc.id = sca.category_id
		WHERE sca.id =#{id}
		 and scc.company_id = #{companyId}
	</select>

	</mapper>