<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tzj.collect.mapper.FlcxLexiconMapper" >

    <select id="lexCheck" resultMap="getCheckMap">
        SELECT DISTINCT
            ftt.*, recFllFlt.`recover`,
            recFllFlt.name_ AS lexiconName,
            recFllFlt.lexicon_id,
            #{cityId} AS cityId,
            #{cityName} AS cityName
        FROM
            flcx_type ftt
        INNER JOIN (
            SELECT
                fll.id AS lexicon_id,
                fll.name_,
                fll.parent_id,
                fll.`recover`
            FROM
                flcx_lexicon fll
            WHERE
                fll.del_flag = 0
            AND fll.name_ = #{lexiconName}
        ) recFllFlt ON recFllFlt.parent_id = ftt.id
        WHERE
            ftt.del_flag = 0
        UNION
        SELECT
            ftt.*, CASE WHEN id=2 THEN '1' ELSE '0' END AS `recover`,
            '' AS lexiconName,
            '' AS lexicon_id,
            #{cityId} AS cityId,
            #{cityName} AS cityName
        FROM
            flcx_type ftt
        WHERE
            del_flag = 0
        AND ftt.id =  #{typeId}
    </select>
    <select id="selectImgUrl" resultType="String" parameterType="Map">
        SELECT
        distinct
        ftt.img_url
        FROM
        flcx_type ftt
        INNER JOIN (
        SELECT
        fll.name_,
        flt.type_id
        FROM
        flcx_lexicon fll
        INNER  JOIN flcx_lexicon_type flt ON fll.id = flt.lexicon_id
        WHERE
        fll.del_flag = 0
        AND flt.del_flag = 0
        <if test="lexiconName != ''" >
            AND fll.name_ = #{lexiconName}
        </if>
        ) fllFlt ON ftt.id = fllFlt.type_id  AND ftt.parent_id =  #{id}
    </select>

    <select id="selectImgUrlAfter" resultType="Map" parameterType="Map">
        SELECT
          distinct
          ftt.name_,
          ftt.img_url
        FROM
          flcx_type ftt
        INNER JOIN (
            SELECT
              fll.name_,
              fct.type_id
            FROM
              flcx_lexicon fll
            INNER  JOIN flcx_city_type fct ON fll.parent_id = fct.parent_id
            WHERE
              fll.del_flag = 0
            AND fct.del_flag = 0
            <if test="lexiconName != ''" >
                AND fll.name_ = #{lexiconName}
            </if>
            AND fct.area_id IN (
                SELECT
                    id AS id
                FROM
                  flcx_city
                WHERE
                 city_name = #{cityName}
                UNION
                SELECT
                  #{cityId} AS id
                )
        ) fllFlt ON ftt.id = fllFlt.type_id  AND ftt.parent_id =  #{id}
    </select>

    <resultMap id="getCheckMap" type="com.tzj.collect.api.lexicon.result.FlcxResult">
        <result property="parentName" column="name_" />
        <result property="lexicon" column="lexiconName"/>
        <result property="lexiconId" column="lexicon_id"/>
        <collection property="imgUrl" javaType="ArrayList" ofType="Map"
                    select="selectImgUrl" column="{lexiconName=lexiconName, id=id}">
            <result property="imgUrl" column="img_url" />
        </collection>
        <collection property="imgUrlAfter" javaType="ArrayList" ofType="Map"
                    select="selectImgUrlAfter" column="{lexiconName=lexiconName, id=id, cityId=cityId, cityName=cityName}">
            <result property="imgUrl" column="img_url" />
            <result property="name" column="name_" />
        </collection>
        <collection property="nameLists" javaType="ArrayList" ofType="Map"
                    select="selectNameLists" column="id">
            <result property="imgUrl" column="img_url" />
            <result property="name" column="name_"/>
        </collection>
    </resultMap>
    <select id="selectNameLists" resultType="com.tzj.collect.entity.FlcxImg" parameterType="String">
        SELECT name_, img_url FROM flcx_img WHERE type_id= #{id}
    </select>
    <select id="lexCheckCount" resultType="Map" parameterType="String">
        SELECT
            top5.*
        FROM
            (
                SELECT
                    *
                FROM
                    flcx_lexicon fl
                WHERE
                    fl.name_ LIKE  #{lexiconName}
                LIMIT 0,
                5
            ) top5
        LEFT JOIN flcx_records fr ON top5.id = fr.lexicons_id
        GROUP BY
            top5.id
        ORDER BY
            COUNT(*) DESC
    </select>

</mapper>