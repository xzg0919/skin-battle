<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tzj.collect.mapper.FlcxLexiconMapper" >

    <select id="lexCheck" resultMap="getCheckMap">
        SELECT DISTINCT
            ftt.*, recFllFlt.`recover`,
            recFllFlt.name_ AS lexiconName,
            recFllFlt.lexicon_id
        FROM
            flcx_type ftt
        INNER JOIN (
            SELECT
                fllFlt.lexicon_id,
                ftt.parent_id,
                fllFlt.`recover`,
                fllFlt.name_
            FROM
                flcx_type ftt
            RIGHT JOIN (
                SELECT
                    fll.id AS lexicon_id,
                    fll.name_,
                    flt.type_id,
                    fll.`recover`
                FROM
                    flcx_lexicon fll
                INNER JOIN flcx_lexicon_type flt ON fll.id = flt.lexicon_id
                WHERE
                    fll.del_flag = 0
                AND flt.del_flag = 0
                AND fll.name_ =  #{lexiconName}
            ) fllFlt ON ftt.id = fllFlt.type_id
        ) recFllFlt ON recFllFlt.parent_id = ftt.id
        WHERE
            ftt.del_flag = 0
        UNION
            SELECT
                ftt.*, '0' AS `recover`,
                '' AS lexiconName,
                '' AS lexicon_id
            FROM
                flcx_type ftt
            WHERE
                del_flag = 0
            AND ftt.id =  #{typeId}
    </select>
    <select id="selectImgUrl" resultType="String" parameterType="Map">
        SELECT
        distinct
        ftt.img_url
        FROM
        flcx_type ftt
        INNER JOIN (
        SELECT
        fll.name_,
        flt.type_id
        FROM
        flcx_lexicon fll
        INNER  JOIN flcx_lexicon_type flt ON fll.id = flt.lexicon_id
        WHERE
        fll.del_flag = 0
        AND flt.del_flag = 0
        <if test="lexiconName != ''" >
            AND fll.name_ = #{lexiconName}
        </if>
        ) fllFlt ON ftt.id = fllFlt.type_id  AND ftt.parent_id =  #{id}

    </select>
    <resultMap id="getCheckMap" type="com.tzj.collect.api.lexicon.result.FlcxResult">
        <result property="parentName" column="name_" />
        <result property="lexicon" column="lexiconName"/>
        <result property="lexiconId" column="lexicon_id"/>
        <collection property="imgUrl" javaType="ArrayList" ofType="Map"
                    select="selectImgUrl" column="{lexiconName=lexiconName, id=id}">
            <result property="imgUrl" column="img_url" />
        </collection>

        <collection property="nameLists" javaType="ArrayList" ofType="Map"
                    select="selectNameLists" column="id">
            <result property="imgUrl" column="img_url" />
            <result property="name" column="name_"/>
        </collection>
    </resultMap>
    <select id="selectNameLists" resultType="com.tzj.collect.entity.FlcxImg" parameterType="String">
        SELECT name_, img_url FROM flcx_img WHERE type_id= #{id}
    </select>
    <select id="lexCheckCount" resultType="Map" parameterType="String">
--         SELECT
--             top5.*
--         FROM
--             (
--                 SELECT
--                     *
--                 FROM
--                     flcx_lexicon fl
--                 WHERE
--                     fl.name_ LIKE  #{lexiconName}
--                 LIMIT 0,
--                 5
--             ) top5
--         LEFT JOIN flcx_records fr ON top5.id = fr.lexicons_id
--         GROUP BY
--             top5.id
--         ORDER BY
--             COUNT(*) DESC
    </select>


    <select id="existTable" parameterType="String" resultType="Integer">
        select count(*)
        from information_schema.TABLES
        where LCASE(table_name)=#{tableName}
    </select>

    <update id="createNewTable" parameterType="String">
        CREATE TABLE ${tableName} (
            `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '编号',
            `lexicons` varchar(50) DEFAULT '' COMMENT '搜索关键字(模糊搜索，存的就是搜索前的值)',
            `lexicon_after` varchar(50) DEFAULT NULL COMMENT '返回结果',
            `lexicons_id` int(11) DEFAULT NULL COMMENT '结果名称id',
            `ali_user_id` varchar(20) DEFAULT NULL COMMENT '阿里用户id',
            `city` varchar(50) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '城市',
            `create_date` datetime NOT NULL COMMENT '创建时间',
            `update_date` datetime NOT NULL COMMENT '更新时间',
            PRIMARY KEY (`id`)
        )ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='查询记录流水'
    </update>

    <insert id="insert" parameterType="FlcxRecords">
        insert into ${tableName}
        (lexicons,lexicon_after,lexicons_id,ali_user_id,city)
        values
        (
        #{flcxRecords.lexicons},
        #{flcxRecords.lexicon_after},
        #{flcxRecords.lexicons_id},
        #{flcxRecords.ali_user_id},
        #{flcxRecords.city},
        #{flcxRecords.create_date},
        #{flcxRecords.update_date}
        )
    </insert>


</mapper>